package com.sample

import com.company.Main;
import com.company.Question;
import com.company.DroolsThread;
import com.company.Nutrient;
import com.company.Product;
import javafx.application.Platform;
import org.drools.runtime.StatefulKnowledgeSession;
import java.util.Arrays;


global Question question;
global DroolsThread droolsThread;

//objects
//sterowanie
//declare Start
//end

//rules
//sterowanie
rule "Init"
    when
    then
    	kcontext.getKnowledgeRuntime().getAgenda().getAgendaGroup( "initial" ).setFocus();
    	//insert(new Start());
end

rule "Question: Protein"
		agenda-group "initial"
    when
    then
        System.out.println( "Protein" );
        question.setQuestion("Zawartoœæ bia³ka:",
        						Arrays.asList("Wysoka", "Œrednia", "Niska"), droolsThread);
        insert(new Nutrient("Protein", question.getAnswer()));
end

rule "Question: Carbo"
		agenda-group "initial"
    when
    then
        System.out.println( "Carbo" );
        question.setQuestion("Zawartoœæ wêglowodanów:",
        						Arrays.asList("Wysoka", "Œrednia", "Niska"), droolsThread);
        insert(new Nutrient("Carbohydrate", question.getAnswer()));
end

rule "Question: Fat"
		agenda-group "initial"
    when
    then
        System.out.println( "Fat" );
        question.setQuestion("Zawartoœæ t³uszczu:",
        						Arrays.asList("Wysoka", "Œrednia", "Niska"), droolsThread);
        insert(new Nutrient("Fat", question.getAnswer()));
end

rule "Question: Calories"
		agenda-group "initial"
    when
    then
        System.out.println( "Kalorycznoœæ" );
        question.setQuestion("Kalorycznoœæ:",
        						Arrays.asList("Wysoka", "Œrednia", "Niska"), droolsThread);
        insert(new Nutrient("Calories", question.getAnswer()));
end

rule "Question: Fiber"
		agenda-group "initial"
    when
    then
        System.out.println( "Fiber" );
        question.setQuestion("Zawartoœæ b³onnika:",
        						Arrays.asList("Wysoka", "Œrednia", "Niska"), droolsThread);
        insert(new Nutrient("Fiber", question.getAnswer()));
end

rule "Makaron"
	when
		not Nutrient(Name("Gluten"), Value("nie"))
		Nutrient(Name("Calories"), Value("Wysoka"))
		Nutrient(Name("Protein"), Value("Wysoka"))
		Nutrient(Name("Fat"), Value("Niska"))
		Nutrient(Name("Carbohydrate"), Value("Wysoka"))
		Nutrient(Name("Fiber"), Value("Wysoka"))
	then
		insert(new Product("Makaron Pe³noziarnisty", false, true, false));
end

rule "P³atki owsiane"
	when
		not Nutrient(Name("Gluten"), Value("nie"))
		Nutrient(Name("Calories"), Value("Wysoka"))
		Nutrient(Name("Protein"), Value("Œrednia"))
		Nutrient(Name("Fat"), Value("Niska"))
		Nutrient(Name("Carbohydrate"), Value("Wysoka"))
		Nutrient(Name("Fiber"), Value("Œrednia"))
	then
		insert(new Product("P³atki owsiane", false, true, false));
end

rule "Kurczak"
	when
		not Nutrient(Name("Miêso"), Value("nie"))
		Nutrient(Name("Calories"), Value("Niska"))
		Nutrient(Name("Protein"), Value("Wysoka"))
		Nutrient(Name("Fat"), Value("Niska"))
		Nutrient(Name("Carbohydrate"), Value("Niska"))
		Nutrient(Name("Fiber"), Value("Niska"))
	then
		insert(new Product("Kurczak", true, false, false));
end

rule "£osoœ"
	when
		not Nutrient(Name("Miêso"), Value("nie"))
		Nutrient(Name("Calories"), Value("Œrednia"));
		(
			Nutrient(Name("Protein"), Value("Œrednia"))
			or
			Nutrient(Name("Protein"), Value("Wysoka"))
		)
		Nutrient(Name("Fat"), Value("Œrednia"))
		Nutrient(Name("Carbohydrate"), Value("Niska"))
		Nutrient(Name("Fiber"), Value("Niska"))
	then
		insert(new Product("£osoœ", true, false, false));
end

rule "Fasola"
	when
		Nutrient(Name("Calories"), Value("Œrednia"))
		Nutrient(Name("Protein"), Value("Wysoka"))
		Nutrient(Name("Fat"), Value("Niska"))
		Nutrient(Name("Carbohydrate"), Value("Wysoka"))
		Nutrient(Name("Fiber"), Value("Wysoka"))
	then
		insert(new Product("Fasola", false, false, false));
end

rule "Jajka"
	when
		Nutrient(Name("Calories"), Value("Œrednia"))
		(
			Nutrient(Name("Protein"), Value("Œrednia"))
			or
			Nutrient(Name("Protein"), Value("Wysoka"))
		)
		Nutrient(Name("Fat"), Value("Niska"))
		Nutrient(Name("Carbohydrate"), Value("Niska"))
		Nutrient(Name("Fiber"), Value("Niska"))
	then
		insert(new Product("Jajka", false, false, false));
end

rule "Orzechy arachidowe"
	when
		Nutrient(Name("Calories"), Value("Wysoka"))
		Nutrient(Name("Protein"), Value("Wysoka"))
		Nutrient(Name("Fat"), Value("Wysoka"))
		Nutrient(Name("Carbohydrate"), Value("Niska"))
		Nutrient(Name("Fiber"), Value("Niska"))
	then
		insert(new Product("Orzechy arachidowe", false, false, false));
end

rule "Banan"
	when
		Nutrient(Name("Calories"), Value("Niska"))
		Nutrient(Name("Protein"), Value("Niska"))
		Nutrient(Name("Fat"), Value("Niska"))
		Nutrient(Name("Carbohydrate"), Value("Œrednia"))
		Nutrient(Name("Fiber"), Value("Niska"))
	then
		insert(new Product("Banan", false, false, false));
end

rule "Daktyle suszone"
	when
		Nutrient(Name("Calories"), Value("Œrednia"))
		Nutrient(Name("Protein"), Value("Niska"))
		Nutrient(Name("Fat"), Value("Niska"))
		Nutrient(Name("Carbohydrate"), Value("Wysoka"))
		Nutrient(Name("Fiber"), Value("Wysoka"))
	then
		insert(new Product("Daktyle suszone", false, false, false));
end

rule "Jab³ko"
	when
		Nutrient(Name("Calories"), Value("Niska"))
		Nutrient(Name("Protein"), Value("Niska"))
		Nutrient(Name("Fat"), Value("Niska"))
		Nutrient(Name("Carbohydrate"), Value("Niska"))
		Nutrient(Name("Fiber"), Value("Niska"))
	then
		insert(new Product("Jab³ko", false, false, false));
end

rule "Broku³y"
	when
		Nutrient(Name("Calories"), Value("Niska"))
		Nutrient(Name("Protein"), Value("Niska"))
		Nutrient(Name("Fat"), Value("Niska"))
		Nutrient(Name("Carbohydrate"), Value("Niska"))
		Nutrient(Name("Fiber"), Value("Niska"))
	then
		insert(new Product("Broku³y", false, false, false));
end

rule "Dorsz"
	when
		not Nutrient(Name("Miêso"))
		Nutrient(Name("Calories"), Value("Niska"))
		Nutrient(Name("Protein"), Value("Wysoka"))
		Nutrient(Name("Fat"), Value("Niska"))
		Nutrient(Name("Carbohydrate"), Value("Niska"))
		Nutrient(Name("Fiber"), Value("Niska"))
	then
		insert(new Product("Dorsz", true, false, false));
end

rule "Groszek zielony"
	when
		Nutrient(Name("Calories"), Value("Niska"))
		Nutrient(Name("Protein"), Value("Niska"))
		Nutrient(Name("Fat"), Value("Niska"))
		Nutrient(Name("Carbohydrate"), Value("Niska"))
		Nutrient(Name("Fiber"), Value("Œrednia"))
	then
		insert(new Product("Groszek zielony", false, false, false));
end

rule "Soja"
	when
		Nutrient(Name("Calories"), Value("Wysoka"))
		Nutrient(Name("Protein"), Value("Wysoka"))
		Nutrient(Name("Fat"), Value("Œrednia"))
		Nutrient(Name("Carbohydrate"), Value("Œrednia"))
		Nutrient(Name("Fiber"), Value("Wysoka"))
	then
		insert(new Product("Soja", false, false, false));
end

rule "Ziemniaki"
	when
		Nutrient(Name("Calories"), Value("Niska"))
		Nutrient(Name("Protein"), Value("Niska"))
		Nutrient(Name("Fat"), Value("Niska"))
		Nutrient(Name("Carbohydrate"), Value("Œrednia"))
		Nutrient(Name("Fiber"), Value("Niska"))
	then
		insert(new Product("Ziemniaki", false, false, false));
end

rule "Kasza jaglana"
	when
		Nutrient(Name("Calories"), Value("Wysoka"))
		Nutrient(Name("Protein"), Value("Œrednia"))
		Nutrient(Name("Fat"), Value("Niska"))
		Nutrient(Name("Carbohydrate"), Value("Wysoka"))
		Nutrient(Name("Fiber"), Value("Niska"))
	then
		insert(new Product("Kasza jaglana", false, false, false));
end

rule "Kasza jêczmienna"
	when
		not Nutrient(Name("Gluten"), Value("nie"))
		Nutrient(Name("Calories"), Value("Wysoka"))
		Nutrient(Name("Protein"), Value("Niska"))
		Nutrient(Name("Fat"), Value("Niska"))
		Nutrient(Name("Carbohydrate"), Value("Wysoka"))
		Nutrient(Name("Fiber"), Value("Œrednia"))
	then
		insert(new Product("Kasza jaglana", false, true, false));
end

rule "Ry¿ bia³y"
	when
		Nutrient(Name("Calories"), Value("Wysoka"))
		Nutrient(Name("Protein"), Value("Niska"))
		Nutrient(Name("Fat"), Value("Niska"))
		Nutrient(Name("Carbohydrate"), Value("Wysoka"))
		Nutrient(Name("Fiber"), Value("Niska"))
	then
		insert(new Product("Ry¿ bia³y", false, false, false));
end

rule "Ry¿ br¹zowy"
	when
		Nutrient(Name("Calories"), Value("Wysoka"))
		Nutrient(Name("Protein"), Value("Niska"))
		Nutrient(Name("Fat"), Value("Niska"))
		Nutrient(Name("Carbohydrate"), Value("Wysoka"))
		Nutrient(Name("Fiber"), Value("Wysoka"))
	then
		insert(new Product("Ry¿ br¹zowy", false, false, false));
end

rule "Mleko"
	when
		not Nutrient(Name("Laktoza"), Value("nie"))
		Nutrient(Name("Calories"), Value("Niska"))
		Nutrient(Name("Protein"), Value("Niska"))
		Nutrient(Name("Fat"), Value("Niska"))
		Nutrient(Name("Carbohydrate"), Value("Niska"))
		Nutrient(Name("Fiber"), Value("Niska"))
	then
		insert(new Product("Mleko", false, false, true));
end

rule "Mleko sojowe"
	when
		Nutrient(Name("Calories"), Value("Niska"))
		Nutrient(Name("Protein"), Value("Niska"))
		Nutrient(Name("Fat"), Value("Niska"))
		Nutrient(Name("Carbohydrate"), Value("Niska"))
		Nutrient(Name("Fiber"), Value("Niska"))
	then
		insert(new Product("Mleko sojowe", false, false, false));
end

rule "Ser twarogowy chudy"
	when
		not Nutrient(Name("Laktoza"), Value("nie"))
		Nutrient(Name("Calories"), Value("Niska"))
		Nutrient(Name("Protein"), Value("Wysoka"))
		Nutrient(Name("Fat"), Value("Niska"))
		Nutrient(Name("Carbohydrate"), Value("Niska"))
		Nutrient(Name("Fiber"), Value("Niska"))
	then
		insert(new Product("Ser twarogowy chudy", false, false, true));
end

rule "Ser twarogowy pó³t³usty"
	when
		not Nutrient(Name("Laktoza"), Value("nie"))
		Nutrient(Name("Calories"), Value("Œrednia"))
		Nutrient(Name("Protein"), Value("Wysoka"))
		Nutrient(Name("Fat"), Value("Niska"))
		Nutrient(Name("Carbohydrate"), Value("Niska"))
		Nutrient(Name("Fiber"), Value("Niska"))
	then
		insert(new Product("Ser twarogowy pó³t³usty", false, false, true));
end

rule "Ser twarogowy t³usty"
	when
		not Nutrient(Name("Laktoza"), Value("nie"))
		Nutrient(Name("Calories"), Value("Œrednia"))
		Nutrient(Name("Protein"), Value("Wysoka"))
		Nutrient(Name("Fat"), Value("Œrednia"))
		Nutrient(Name("Carbohydrate"), Value("Niska"))
		Nutrient(Name("Fiber"), Value("Niska"))
	then
		insert(new Product("Ser twarogowy t³usty", false, false, true));
end

rule "Parmezan"
	when
		not Nutrient(Name("Laktoza"), Value("nie"))
		Nutrient(Name("Calories"), Value("Wysoka"))
		Nutrient(Name("Protein"), Value("Wysoka"))
		Nutrient(Name("Fat"), Value("Wysoka"))
		Nutrient(Name("Carbohydrate"), Value("Niska"))
		Nutrient(Name("Fiber"), Value("Niska"))
	then
		insert(new Product("Parmezan", false, false, true));
end

rule "W¹troba wieprzowa"
	when
		not Nutrient(Name("Miêso"), Value("nie"))
		Nutrient(Name("Calories"), Value("Œrednia"))
		Nutrient(Name("Protein"), Value("Wysoka"))
		Nutrient(Name("Fat"), Value("Niska"))
		Nutrient(Name("Carbohydrate"), Value("Niska"))
		Nutrient(Name("Fiber"), Value("Niska"))
	then
		insert(new Product("W¹troba wieprzowa", true, false, false));
end

rule "Bataty"
	when
		Nutrient(Name("Calories"), Value("Œrednia"))
		Nutrient(Name("Protein"), Value("Niska"))
		Nutrient(Name("Fat"), Value("Niska"))
		Nutrient(Name("Carbohydrate"), Value("Œrednia"))
		Nutrient(Name("Fiber"), Value("Niska"))
	then
		insert(new Product("Bataty", false, false, false));
end

rule "Kie³ki ciecierzycy"
	when
		Nutrient(Name("Calories"), Value("Œrednia"))
		Nutrient(Name("Protein"), Value("Œrednia"))
		Nutrient(Name("Fat"), Value("Niska"))
		Nutrient(Name("Carbohydrate"), Value("Œrednia"))
		Nutrient(Name("Fiber"), Value("Niska"))
	then
		insert(new Product("Kie³ki ciecierzycy", false, false, false));
end

rule "Miêso"
		salience 1
	when
		not Nutrient(Name("Miêso"))
		p: Product(isMeat())
	then
		System.out.println("Miêso?");
		question.setQuestion("Miêso?", Arrays.asList("tak", "nie"), droolsThread);
        insert(new Nutrient("Miêso", question.getAnswer()));
        if(question.getAnswer() == "nie")
        	retract(p);
end

rule "Gluten"
		salience 1
	when
		not Nutrient(Name("Gluten"))
		p: Product(hasGluten())
	then
		question.setQuestion("Gluten?", Arrays.asList("tak", "nie"), droolsThread);
        insert(new Nutrient("Gluten", question.getAnswer()));
        if(question.getAnswer() == "nie")
        	retract(p);
end

rule "Gluten"
		salience 1
	when
		not Nutrient(Name("Laktoza"))
		p: Product(hasLactose())
	then
		question.setQuestion("Laktoza?", Arrays.asList("tak", "nie"), droolsThread);
        insert(new Nutrient("Laktoza", question.getAnswer()));
        if(question.getAnswer() == "nie")
        	retract(p);
end

rule "GatherProducts"
		salience -1
	when
		p: Product()
	then
		System.out.println(p.Name());
end

rule "End"
		salience -2
    when
    then
        question.setEnd(true);
        System.out.println("Kurczak, ryz i kreatyna!!!");
        drools.halt();
end

rule "AbruptEnd"
		salience 100
		auto-focus true
	when
		Nutrient( Name("End") )
	then
		System.out.println("Abrupt");
		drools.halt();
	end
